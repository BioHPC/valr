// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <dplyr.h>
#include <Rcpp.h>

using namespace Rcpp;

// intersect_impl
DataFrame intersect_impl(GroupedDataFrame x, GroupedDataFrame y, int max_dist, std::string suffix_x, std::string suffix_y);
RcppExport SEXP Rbedtools_intersect_impl(SEXP xSEXP, SEXP ySEXP, SEXP max_distSEXP, SEXP suffix_xSEXP, SEXP suffix_ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< GroupedDataFrame >::type x(xSEXP);
    Rcpp::traits::input_parameter< GroupedDataFrame >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type max_dist(max_distSEXP);
    Rcpp::traits::input_parameter< std::string >::type suffix_x(suffix_xSEXP);
    Rcpp::traits::input_parameter< std::string >::type suffix_y(suffix_ySEXP);
    __result = Rcpp::wrap(intersect_impl(x, y, max_dist, suffix_x, suffix_y));
    return __result;
END_RCPP
}
// interval_overlap
int interval_overlap(int const& start_x, int const& end_x, int const& start_y, int const& end_y);
RcppExport SEXP Rbedtools_interval_overlap(SEXP start_xSEXP, SEXP end_xSEXP, SEXP start_ySEXP, SEXP end_ySEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int const& >::type start_x(start_xSEXP);
    Rcpp::traits::input_parameter< int const& >::type end_x(end_xSEXP);
    Rcpp::traits::input_parameter< int const& >::type start_y(start_ySEXP);
    Rcpp::traits::input_parameter< int const& >::type end_y(end_ySEXP);
    __result = Rcpp::wrap(interval_overlap(start_x, end_x, start_y, end_y));
    return __result;
END_RCPP
}
// merge_impl
DataFrame merge_impl(GroupedDataFrame gdf, int max_dist);
RcppExport SEXP Rbedtools_merge_impl(SEXP gdfSEXP, SEXP max_distSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< GroupedDataFrame >::type gdf(gdfSEXP);
    Rcpp::traits::input_parameter< int >::type max_dist(max_distSEXP);
    __result = Rcpp::wrap(merge_impl(gdf, max_dist));
    return __result;
END_RCPP
}
// random_impl
DataFrame random_impl(DataFrame genome, int length, int n, unsigned int seed);
RcppExport SEXP Rbedtools_random_impl(SEXP genomeSEXP, SEXP lengthSEXP, SEXP nSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< DataFrame >::type genome(genomeSEXP);
    Rcpp::traits::input_parameter< int >::type length(lengthSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type seed(seedSEXP);
    __result = Rcpp::wrap(random_impl(genome, length, n, seed));
    return __result;
END_RCPP
}
